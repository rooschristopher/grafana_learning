services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    depends_on:
      - prometheus
      - elasticsearch
    networks:
      - monitoring_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: elasticsearch
    hostname: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - monitoring_network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.0
    container_name: kibana
    hostname: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - monitoring_network
  mocker:
    container_name: mocker
    hostname: mocker
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    networks:
      - monitoring_network
  loki:
    hostname: loki
    container_name: loki
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

    networks:
      - monitoring_network
  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - promtail_data:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring_network

  localstack:
    image: localstack/localstack
    container_name: localstack
    hostname: localstack
    ports:
      - "4566:4566"
      - "4571:4571"
      - "3031:8080"
    environment:
      - SERVICES=serverless,s3,lambda,dynamodb,cloudformation,waf,sts,iam,logs, cloudwatch
      - DEBUG=1
      - DATA_DIR=/tmp/localstack
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LOCALSTACK_UI=1
      - LOCALSTACK_AUTH_TOKEN=${LOCALSTACK_AUTH_TOKEN}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - monitoring_network

  cloudwatch_lambda_metrics:
    build:
      context: ./prometheus_metrics_servers/cloudwatch_lambda_metrics
      dockerfile: Dockerfile
    container_name: cloudwatch_lambda_metrics
    hostname: cloudwatch_lambda_metrics
    ports:
      - "8001:8000"
    networks:
      - monitoring_network
volumes:
  prometheus_data:
  grafana_data:
  es_data:
  promtail_data:

networks:
  monitoring_network:
